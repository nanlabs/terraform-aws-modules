# Analytics Platform with Document Store Configuration Example
# Copy this file to terraform.tfvars and customize the values

# Project Configuration
project_name = "analytics-platform"
environment  = "prod"
region      = "us-east-1"

# Common Tags
tags = {
  Project     = "AnalyticsPlatform"
  Environment = "production"
  Team        = "DataEngineering"
  Owner       = "analytics-team@company.com"
  CostCenter  = "engineering"
  Platform    = "AnalyticsPlatformWithDocumentStore"
  Terraform   = "true"
}

# VPC Configuration
vpc_cidr            = "10.40.0.0/16"
availability_zones  = ["us-east-1a", "us-east-1b", "us-east-1c"]
private_subnets     = ["10.40.1.0/24", "10.40.2.0/24", "10.40.3.0/24"]
public_subnets      = ["10.40.101.0/24", "10.40.102.0/24", "10.40.103.0/24"]
database_subnets    = ["10.40.201.0/24", "10.40.202.0/24", "10.40.203.0/24"]

# Cost Optimization - Set to true for development, false for production
single_nat_gateway = false

# DocumentDB Configuration
docdb_engine_version            = "4.0.0"
docdb_instance_class            = "db.t3.medium"
docdb_cluster_size             = 2  # Primary + 1 read replica
docdb_backup_retention_period  = 7
docdb_preferred_backup_window  = "03:00-04:00"
docdb_preferred_maintenance_window = "sun:04:00-sun:05:00"
docdb_enabled_cloudwatch_logs_exports = ["audit"]
docdb_allowed_cidr_blocks = [
  # Add specific CIDR blocks that need direct DocumentDB access
  # Usually empty - access through bastion host
]
enable_performance_insights = true

# S3 Storage Lifecycle
s3_transition_standard_ia_days = 30   # Move to IA after 30 days
s3_transition_glacier_days     = 90   # Move to Glacier after 90 days
s3_expiration_days            = 365   # Delete after 1 year

# Glue Configuration
glue_version         = "4.0"
glue_max_capacity   = 10
glue_max_retries    = 1
glue_timeout_minutes = 2880  # 48 hours
crawler_schedule    = "cron(0 2 * * ? *)"  # Daily at 2 AM UTC

# Kafka/MSK Configuration
enable_streaming      = true
kafka_version        = "2.8.1"
kafka_broker_count   = 2
kafka_instance_type  = "kafka.m5.large"
kafka_ebs_volume_size = 100

# Bastion Host Configuration
bastion_instance_type = "t3.small"
bastion_key_name     = null  # Set to your key pair name if needed
bastion_allowed_cidr_blocks = [
  "10.0.0.0/8",      # Private networks
  "172.16.0.0/12",   # Private networks
  "192.168.0.0/16"   # Private networks
  # Add your office/home IP ranges here for external access
  # "203.0.113.0/24"  # Example office network
]

# Monitoring Configuration
enable_detailed_monitoring = true
log_retention_days        = 14

# Platform Features
enable_document_search = true   # Enable full-text search capabilities
enable_ml_integration = true     # Enable ML feature extraction
enable_real_time_sync = true     # Enable real-time sync between stores

# Cost Optimization
enable_cost_optimization = true
enable_spot_instances    = false  # Set to true for non-production environments

# Advanced Configuration (uncomment and modify as needed)

# Production Configuration Example
# docdb_instance_class = "db.r5.large"      # Higher performance for production
# docdb_cluster_size = 3                    # Primary + 2 read replicas
# kafka_instance_type = "kafka.m5.xlarge"   # Higher throughput
# kafka_broker_count = 3                    # More brokers for HA
# glue_max_capacity = 20                    # More processing power

# Development Environment Overrides
# (Uncomment for development environments to reduce costs)
# single_nat_gateway = true
# docdb_instance_class = "db.t3.medium"
# docdb_cluster_size = 1
# kafka_instance_type = "kafka.t3.small"
# kafka_broker_count = 1
# enable_streaming = false
# glue_max_capacity = 5
# enable_detailed_monitoring = false
# log_retention_days = 7

# High-Performance Configuration
# (For high-throughput scenarios)
# docdb_instance_class = "db.r5.xlarge"
# docdb_cluster_size = 5  # 1 primary + 4 read replicas
# kafka_instance_type = "kafka.m5.2xlarge"
# kafka_broker_count = 5
# kafka_ebs_volume_size = 500
# glue_max_capacity = 50

# Security Hardening
# docdb_kms_key_id = "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"
# Enable additional security features as needed
